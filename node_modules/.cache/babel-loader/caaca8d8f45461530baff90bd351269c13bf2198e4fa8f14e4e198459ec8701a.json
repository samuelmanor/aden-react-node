{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState({});\n  const [allPages, setAllPages] = useState([]);\n  function getAllPages() {\n    pageService.read().then(initialPages => {\n      setAllPages(initialPages);\n    });\n  }\n  ;\n  function getPage(id) {\n    pageService.one(id).then(returnedPage => {\n      console.log(returnedPage);\n      setCurrentPage(returnedPage);\n    });\n  }\n  ;\n\n  // function changePage(dir) {\n  //   if (dir === 'back') {\n  //     getPage(currentPage.id - 1);\n  //   } else if (dir === 'forward') {\n  //     getPage(currentPage.id + 1);\n  //   }\n  // }\n\n  // onClick={() => {changePage('forward')}}\n\n  useEffect(() => {\n    getAllPages();\n    getPage(allPages.length);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage.id > allPages.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPage.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixGJ1K5ioZc4Qk9+w1wJ9hbJ61Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","pageService","Page","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","allPages","setAllPages","getAllPages","read","then","initialPages","getPage","id","one","returnedPage","console","log","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState({});\n  const [allPages, setAllPages] = useState([]);\n\n  function getAllPages() {\n    pageService.read()\n      .then(initialPages => {\n        setAllPages(initialPages);\n      });\n  };\n\n  function getPage(id) {\n    pageService.one(id)\n      .then(returnedPage => {\n        console.log(returnedPage);\n        setCurrentPage(returnedPage);\n      });\n  };\n\n  // function changePage(dir) {\n  //   if (dir === 'back') {\n  //     getPage(currentPage.id - 1);\n  //   } else if (dir === 'forward') {\n  //     getPage(currentPage.id + 1);\n  //   }\n  // }\n\n  // onClick={() => {changePage('forward')}}\n\n  useEffect(() => {\n    getAllPages();\n    getPage(allPages.length);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Page currentPage={currentPage} />\n\n      <div>\n        {currentPage.id > allPages.length ? <p>back</p> : null}\n        <p>{currentPage.id}</p>\n        <p>forward</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASW,WAAWA,CAAA,EAAG;IACrBV,WAAW,CAACW,IAAI,EAAE,CACfC,IAAI,CAACC,YAAY,IAAI;MACpBJ,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN;EAAC;EAED,SAASC,OAAOA,CAACC,EAAE,EAAE;IACnBf,WAAW,CAACgB,GAAG,CAACD,EAAE,CAAC,CAChBH,IAAI,CAACK,YAAY,IAAI;MACpBC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MACzBV,cAAc,CAACU,YAAY,CAAC;IAC9B,CAAC,CAAC;EACN;EAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEAnB,SAAS,CAAC,MAAM;IACdY,WAAW,EAAE;IACbI,OAAO,CAACN,QAAQ,CAACY,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA,CAACF,IAAI;MAACK,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAElCvB,OAAA;MAAAmB,QAAA,GACGhB,WAAW,CAACS,EAAE,GAAGP,QAAQ,CAACY,MAAM,gBAAGjB,OAAA;QAAAmB,QAAA,EAAG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,GAAG,IAAI,eACtDvB,OAAA;QAAAmB,QAAA,EAAIhB,WAAW,CAACS;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvBvB,OAAA;QAAAmB,QAAA,EAAG;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACrB,EAAA,CA7CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}