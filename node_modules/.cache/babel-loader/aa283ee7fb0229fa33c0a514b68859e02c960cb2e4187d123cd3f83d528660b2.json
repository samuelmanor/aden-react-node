{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo(_ref) {\n  _s();\n  let {\n    id,\n    task,\n    completed,\n    handleUpdate\n  } = _ref;\n  const [editingState, setEditingState] = useState(false);\n  const [taskText, setTaskText] = useState(task);\n  const toDoStyle = {\n    // clean this up lol\n    done: {\n      height: 20,\n      width: 20,\n      backgroundColor: 'rgba(219, 210, 195, 0.8)',\n      borderRadius: 10,\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    notDone: {\n      height: 10,\n      width: 10,\n      borderRadius: 10,\n      border: '5px solid rgba(219, 210, 195, 0.8)',\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    p: {\n      display: 'inline-block',\n      marginTop: 0,\n      marginLeft: 10,\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      width: 200,\n      fontSize: 17\n    },\n    task: {\n      display: 'inline-block',\n      marginLeft: 10,\n      marginBottom: 16\n    },\n    input: {\n      border: 'none',\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      backgroundColor: 'transparent',\n      width: 200,\n      fontSize: 17\n    },\n    button: {\n      border: 'none',\n      backgroundColor: 'transparent',\n      fontSize: 18,\n      cursor: 'pointer'\n    }\n  };\n  function updateTask() {\n    if (taskText === '') {\n      const input = document.getElementById('text-box');\n      input.placeholder = 'cannot be blank!'; // OR: delete whole task and replace with plus button for adding new one\n    } else {\n      handleUpdate(id, 'task', taskText);\n      setEditingState(false);\n    }\n  }\n  ;\n\n  // useEffect(() => {\n  //     const input = document.getElementById('text-box');\n  //     if (input) {\n  //         input.focus();\n  //     }\n  // }, [editingState]);\n\n  const input = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: toDoStyle.task,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: toDoStyle.input,\n      type: \"text\",\n      id: \"text-box\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: toDoStyle.button,\n      onClick: updateTask,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n  const p = /*#__PURE__*/_jsxDEV(\"p\", {\n    onClick: () => setEditingState(true),\n    style: toDoStyle.p,\n    children: task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 15\n  }, this);\n  const div = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.done,\n      onClick: () => handleUpdate(id, 'state', false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.notDone,\n      onClick: () => handleUpdate(id, 'state', true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 111\n    }, this), editingState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.task,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: toDoStyle.input,\n        type: \"text\",\n        id: \"text-box\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: toDoStyle.button,\n        onClick: updateTask,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setEditingState(true),\n      style: toDoStyle.p,\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"EOv4MIT46QDBPYSaSD7+axyA9GU=\");\n_c = ToDo;\n;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ToDo","_ref","_s","id","task","completed","handleUpdate","editingState","setEditingState","taskText","setTaskText","toDoStyle","done","height","width","backgroundColor","borderRadius","marginLeft","display","cursor","notDone","border","p","marginTop","borderBottom","fontSize","marginBottom","input","button","updateTask","document","getElementById","placeholder","style","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","div","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction ToDo({ id, task, completed, handleUpdate }) {\n    const [editingState, setEditingState] = useState(false);\n    const [taskText, setTaskText] = useState(task);\n\n    const toDoStyle = { // clean this up lol\n        done: {\n            height: 20,\n            width: 20,\n            backgroundColor: 'rgba(219, 210, 195, 0.8)',\n            borderRadius: 10,\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        notDone: {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            border: '5px solid rgba(219, 210, 195, 0.8)',\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        p: {\n            display: 'inline-block',\n            marginTop: 0,\n            marginLeft: 10,\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            width: 200,\n            fontSize: 17,\n        },\n\n        task: {\n            display: 'inline-block',\n            marginLeft: 10,\n            marginBottom: 16,\n        },\n\n        input: {\n            border: 'none',\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            backgroundColor: 'transparent',\n            width: 200,\n            fontSize: 17,\n        },\n\n        button: {\n            border: 'none',\n            backgroundColor: 'transparent',\n            fontSize: 18,\n            cursor: 'pointer'\n        }\n    };\n\n    function updateTask() {\n        if (taskText === '') {\n            const input = document.getElementById('text-box');\n            input.placeholder = 'cannot be blank!';         // OR: delete whole task and replace with plus button for adding new one\n        } else {\n            handleUpdate(id, 'task', taskText);\n            setEditingState(false);\n        }\n    };\n\n    // useEffect(() => {\n    //     const input = document.getElementById('text-box');\n    //     if (input) {\n    //         input.focus();\n    //     }\n    // }, [editingState]);\n\n    const input =\n        <div style={toDoStyle.task}>\n            <input style={toDoStyle.input} type='text' id='text-box' value={taskText} onChange={(e) => setTaskText(e.target.value)} /> \n            <button style={toDoStyle.button} onClick={updateTask}>save</button>\n        </div>;\n    \n    const p = <p onClick={() => setEditingState(true)} style={toDoStyle.p}>{task}</p>;\n\n    const div = <div>+</div>\n\n    return (\n        <div>\n            {completed ? <div style={toDoStyle.done}onClick={() => handleUpdate(id, 'state', false)}></div> : <div style={toDoStyle.notDone} onClick={() => handleUpdate(id, 'state', true)}></div>}\n            \n            {editingState ? \n            <div style={toDoStyle.task}>\n                <input style={toDoStyle.input} type='text' id='text-box' value={taskText} onChange={(e) => setTaskText(e.target.value)} /> \n                <button style={toDoStyle.button} onClick={updateTask}>save</button>\n            </div>\n            : <p onClick={() => setEditingState(true)} style={toDoStyle.p}>{task}</p>}\n        </div>\n    );\n};\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}