{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo(_ref) {\n  _s();\n  let {\n    id,\n    task,\n    completed,\n    handleUpdate\n  } = _ref;\n  const [editingState, setEditingState] = useState(false);\n  const [taskText, setTaskText] = useState(task);\n  const toDoStyle = {\n    done: {\n      height: 20,\n      width: 20,\n      backgroundColor: 'rgba(219, 210, 195, 0.8)',\n      borderRadius: 10,\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    notDone: {\n      height: 10,\n      width: 10,\n      borderRadius: 10,\n      border: '5px solid rgba(219, 210, 195, 0.8)',\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    p: {\n      display: 'inline-block',\n      marginTop: 0,\n      marginLeft: 10,\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      width: 200,\n      fontSize: 17\n    },\n    blank: {\n      color: '#bfb39b'\n    },\n    task: {\n      display: 'inline-block',\n      marginLeft: 10,\n      marginBottom: 16\n    },\n    input: {\n      border: 'none',\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      backgroundColor: 'transparent',\n      width: 200,\n      fontSize: 17\n    },\n    button: {\n      border: 'none',\n      backgroundColor: 'transparent',\n      fontSize: 18,\n      cursor: 'pointer'\n    }\n  };\n  function updateTask() {\n    handleUpdate(id, 'task', taskText);\n    setEditingState(false);\n    if (taskText === '') {\n      handleUpdate(id, 'state', false);\n    }\n  }\n  ;\n  const toDoInput = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: toDoStyle.task,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      style: toDoStyle.input,\n      type: \"text\",\n      id: \"text-box\",\n      value: taskText,\n      onChange: e => setTaskText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: toDoStyle.button,\n      onClick: updateTask,\n      children: \"save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n  const toDoReg = /*#__PURE__*/_jsxDEV(\"p\", {\n    onClick: () => setEditingState(true),\n    style: toDoStyle.p,\n    children: task\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }, this);\n  const toDoBlank = /*#__PURE__*/_jsxDEV(\"p\", {\n    onClick: () => setEditingState(true),\n    style: {\n      ...toDoStyle.p,\n      ...toDoStyle.blank\n    },\n    children: \"add new...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 23\n  }, this);\n  function showToDo() {\n    if (taskText === '' && editingState === false) {\n      return toDoBlank;\n    } else if (editingState === true) {\n      return toDoInput;\n    } else {\n      return toDoReg;\n    }\n    ;\n  }\n  ;\n  useEffect(() => {\n    const input = document.getElementById('text-box');\n    if (input) {\n      input.focus();\n    }\n  }, [editingState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.done,\n      onClick: () => handleUpdate(id, 'state', false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.notDone,\n      onClick: () => handleUpdate(id, 'state', true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 111\n    }, this), showToDo()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"mHy4Pr/+RoW2xV5OxkCLy2MOr9o=\");\n_c = ToDo;\n;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ToDo","_ref","_s","id","task","completed","handleUpdate","editingState","setEditingState","taskText","setTaskText","toDoStyle","done","height","width","backgroundColor","borderRadius","marginLeft","display","cursor","notDone","border","p","marginTop","borderBottom","fontSize","blank","color","marginBottom","input","button","updateTask","toDoInput","style","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toDoReg","toDoBlank","showToDo","document","getElementById","focus","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction ToDo({ id, task, completed, handleUpdate }) {\n    const [editingState, setEditingState] = useState(false);\n    const [taskText, setTaskText] = useState(task);\n\n    const toDoStyle = {\n        done: {\n            height: 20,\n            width: 20,\n            backgroundColor: 'rgba(219, 210, 195, 0.8)',\n            borderRadius: 10,\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        notDone: {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            border: '5px solid rgba(219, 210, 195, 0.8)',\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        p: {\n            display: 'inline-block',\n            marginTop: 0,\n            marginLeft: 10,\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            width: 200,\n            fontSize: 17,\n        },\n\n        blank: {\n            color: '#bfb39b',\n        },\n\n        task: {\n            display: 'inline-block',\n            marginLeft: 10,\n            marginBottom: 16,\n        },\n\n        input: {\n            border: 'none',\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            backgroundColor: 'transparent',\n            width: 200,\n            fontSize: 17,\n        },\n\n        button: {\n            border: 'none',\n            backgroundColor: 'transparent',\n            fontSize: 18,\n            cursor: 'pointer'\n        }\n    };\n\n    function updateTask() {\n        handleUpdate(id, 'task', taskText);\n        setEditingState(false);\n\n        if (taskText === '') {\n            handleUpdate(id, 'state', false);\n        }\n    };\n\n    const toDoInput =\n        <div style={toDoStyle.task}>\n            <input style={toDoStyle.input} type='text' id='text-box' value={taskText} onChange={(e) => setTaskText(e.target.value)} /> \n            <button style={toDoStyle.button} onClick={updateTask}>save</button>\n        </div>;\n    \n    const toDoReg = <p onClick={() => setEditingState(true)} style={toDoStyle.p}>{task}</p>;\n\n    const toDoBlank = <p onClick={() => setEditingState(true)} style={{ ...toDoStyle.p, ...toDoStyle.blank }}>add new...</p>\n\n    function showToDo() {\n        if (taskText === '' && editingState === false) {\n            return toDoBlank;\n        } else if (editingState === true) {\n            return toDoInput;\n        } else {\n            return toDoReg;\n        };\n    };\n\n    useEffect(() => {\n        const input = document.getElementById('text-box');\n        if (input) {\n            input.focus();\n        }\n    }, [editingState]);\n\n    return (\n        <div>\n            {completed ? <div style={toDoStyle.done}onClick={() => handleUpdate(id, 'state', false)}></div> : <div style={toDoStyle.notDone} onClick={() => handleUpdate(id, 'state', true)}></div>}\n            {showToDo()}\n        </div>\n    );\n};\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}