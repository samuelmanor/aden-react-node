{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo(_ref) {\n  _s();\n  let {\n    id,\n    task,\n    completed,\n    handleUpdate\n  } = _ref;\n  const [editingState, setEditingState] = useState(false);\n  const [taskText, setTaskText] = useState(task);\n  const toDoStyle = {\n    done: {\n      height: 20,\n      width: 20,\n      backgroundColor: 'rgba(219, 210, 195, 0.8)',\n      borderRadius: 10,\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    notDone: {\n      height: 10,\n      width: 10,\n      borderRadius: 10,\n      border: '5px solid rgba(219, 210, 195, 0.8)',\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    p: {\n      display: 'inline-block',\n      marginTop: 0,\n      marginLeft: 10,\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      width: 200,\n      fontSize: 17\n    },\n    task: {\n      display: 'inline-block',\n      marginLeft: 10,\n      marginBottom: 16\n    },\n    input: {\n      border: 'none',\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      backgroundColor: 'transparent',\n      width: 200,\n      fontSize: 17\n    },\n    button: {\n      border: 'none',\n      backgroundColor: 'transparent',\n      fontSize: 18\n    },\n    buttonHover: {\n      color: 'rgba(219, 210, 195, 0.8'\n    }\n  };\n  function updateTask() {\n    handleUpdate(id, 'task', taskText);\n    setEditingState(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.done,\n      onClick: () => handleUpdate(id, 'state', false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.notDone,\n      onClick: () => handleUpdate(id, 'state', true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 111\n    }, this), editingState ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.task,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: toDoStyle.input,\n        type: \"text\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: toDoStyle.button,\n        onClick: updateTask,\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setEditingState(editingState => !editingState),\n      style: toDoStyle.p,\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"EOv4MIT46QDBPYSaSD7+axyA9GU=\");\n_c = ToDo;\n;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDo","_ref","_s","id","task","completed","handleUpdate","editingState","setEditingState","taskText","setTaskText","toDoStyle","done","height","width","backgroundColor","borderRadius","marginLeft","display","cursor","notDone","border","p","marginTop","borderBottom","fontSize","marginBottom","input","button","buttonHover","color","updateTask","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDo({ id, task, completed, handleUpdate }) {\n    const [editingState, setEditingState] = useState(false);\n    const [taskText, setTaskText] = useState(task);\n\n    const toDoStyle = {\n        done: {\n            height: 20,\n            width: 20,\n            backgroundColor: 'rgba(219, 210, 195, 0.8)',\n            borderRadius: 10,\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        notDone: {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            border: '5px solid rgba(219, 210, 195, 0.8)',\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        p: {\n            display: 'inline-block',\n            marginTop: 0,\n            marginLeft: 10,\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            width: 200,\n            fontSize: 17,\n        },\n\n        task: {\n            display: 'inline-block',\n            marginLeft: 10,\n            marginBottom: 16,\n        },\n\n        input: {\n            border: 'none',\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            backgroundColor: 'transparent',\n            width: 200,\n            fontSize: 17,\n        },\n\n        button: {\n            border: 'none',\n            backgroundColor: 'transparent',\n            fontSize: 18,\n        },\n\n        buttonHover: {\n            color: 'rgba(219, 210, 195, 0.8',\n        },\n    };\n\n    function updateTask() {\n        handleUpdate(id, 'task', taskText);\n        setEditingState(false);\n    }\n\n    return (\n        <div>\n            {completed ? <div style={toDoStyle.done}onClick={() => handleUpdate(id, 'state', false)}></div> : <div style={toDoStyle.notDone} onClick={() => handleUpdate(id, 'state', true)}></div>}\n            \n            {editingState ? \n            <div style={toDoStyle.task}>\n                <input style={toDoStyle.input} type='text' value={taskText} onChange={(e) => setTaskText(e.target.value)} /> \n                <button style={toDoStyle.button} onClick={updateTask}>save</button>\n            </div>\n            : <p onClick={() => setEditingState(editingState => !editingState)} style={toDoStyle.p}>{task}</p>}\n        </div>\n    );\n};\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}