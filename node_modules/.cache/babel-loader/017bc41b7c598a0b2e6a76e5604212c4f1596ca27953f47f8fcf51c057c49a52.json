{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allPages, setAllPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState({});\n  useEffect(() => {\n    pageService.read().then(initialPages => {\n      setAllPages(initialPages);\n      const firstPageId = initialPages.length - 1;\n      setCurrentPage(initialPages[firstPageId]);\n    });\n  }, []);\n  function changePage(direction) {\n    if (direction === 'forward') {\n      const nextPageId = currentPage.id;\n      setCurrentPage(allPages[nextPageId]);\n    } else if (direction === 'back') {\n      const nextPageId = currentPage.id - 2;\n      setCurrentPage(allPages[nextPageId]);\n    }\n    ;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(currentPage),\n      children: \"console.log current page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      page: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage.id > allPages.length - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => changePage('back'),\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 49\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPage.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => changePage('forward'),\n        children: \"forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2ZitBY6DLtFudoHc52Q/ydZKl6I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","pageService","Page","jsxDEV","_jsxDEV","App","_s","allPages","setAllPages","currentPage","setCurrentPage","read","then","initialPages","firstPageId","length","changePage","direction","nextPageId","id","className","children","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","page","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\n\nfunction App() {\n  const [allPages, setAllPages] = useState([]);\n  const [currentPage, setCurrentPage] = useState({});\n\n  useEffect(() => {\n    pageService.read()\n      .then(initialPages => {\n        setAllPages(initialPages);\n\n        const firstPageId = initialPages.length - 1;\n        setCurrentPage(initialPages[firstPageId]);\n      });\n  }, []);\n\n  function changePage(direction) {\n    if (direction === 'forward') {\n      const nextPageId = currentPage.id;\n      setCurrentPage(allPages[nextPageId]);\n    } else if (direction === 'back') {\n      const nextPageId = currentPage.id - 2;\n      setCurrentPage(allPages[nextPageId]);\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => console.log(currentPage)}>console.log current page</button>\n      <Page page={currentPage} />\n\n      <div>\n        {/* <p onClick={() => changePage('back')}>back</p> */}\n        {currentPage.id > allPages.length - 1 ? <p onClick={() => changePage('back')}>back</p> : null}\n        <p>{currentPage.id}</p>\n        <p onClick={() => changePage('forward')}>forward</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}