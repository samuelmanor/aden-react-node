{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo(_ref) {\n  _s();\n  let {\n    id,\n    task,\n    completed,\n    handleUpdateTask\n  } = _ref;\n  const [editingState, setEditingState] = useState(false);\n  const [taskText, setTaskText] = useState(task);\n  const toDoStyle = {\n    div: {\n      display: 'flex',\n      height: 45\n    },\n    done: {\n      height: 20,\n      width: 20,\n      backgroundColor: 'rgba(219, 210, 195, 0.8)',\n      borderRadius: 10,\n      marginLeft: 10,\n      cursor: 'pointer'\n    },\n    notDone: {\n      height: 10,\n      width: 10,\n      borderRadius: 10,\n      border: '5px solid rgba(219, 210, 195, 0.8)',\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    p: {\n      marginLeft: 10,\n      marginTop: 0,\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      width: 200,\n      fontSize: 17\n    },\n    task: {\n      marginLeft: 10,\n      marginBottom: 16\n    },\n    input: {\n      border: 'none',\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      backgroundColor: 'transparent',\n      width: 200,\n      fontSize: 17\n    },\n    button: {\n      border: 'none',\n      backgroundColor: 'transparent',\n      fontSize: 18,\n      cursor: 'pointer'\n    }\n  };\n\n  // function updateTask() {\n  //     handleUpdateTask(id, taskText);\n  //     setEditingState(false);\n  // };\n\n  // useEffect(() => {\n  //     const input = document.getElementById('text-box');\n  //     if (input) {\n  //         input.focus();\n  //     };\n  // }, [editingState]);\n\n  // useEffect(() => {\n  //     setTaskText(task);\n  // }, [task]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: toDoStyle.div\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"EOv4MIT46QDBPYSaSD7+axyA9GU=\");\n_c = ToDo;\n;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ToDo","_ref","_s","id","task","completed","handleUpdateTask","editingState","setEditingState","taskText","setTaskText","toDoStyle","div","display","height","done","width","backgroundColor","borderRadius","marginLeft","cursor","notDone","border","p","marginTop","borderBottom","fontSize","marginBottom","input","button","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction ToDo({ id, task, completed, handleUpdateTask }) {\n    const [editingState, setEditingState] = useState(false);\n    const [taskText, setTaskText] = useState(task);\n\n    const toDoStyle = {\n        div: {\n            display: 'flex',\n            height: 45\n        },\n\n        done: {\n            height: 20,\n            width: 20,\n            backgroundColor: 'rgba(219, 210, 195, 0.8)',\n            borderRadius: 10,\n            marginLeft: 10,\n            cursor: 'pointer'\n        },\n\n        notDone: {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            border: '5px solid rgba(219, 210, 195, 0.8)',\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer'\n        },\n\n        p: {\n            marginLeft: 10,\n            marginTop: 0,\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            width: 200,\n            fontSize: 17\n        },\n\n        task: {\n            marginLeft: 10,\n            marginBottom: 16\n        },\n\n        input: {\n            border: 'none',\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            backgroundColor: 'transparent',\n            width: 200,\n            fontSize: 17\n        },\n\n        button: {\n            border: 'none',\n            backgroundColor: 'transparent',\n            fontSize: 18,\n            cursor: 'pointer'\n        }\n    };\n\n    // function updateTask() {\n    //     handleUpdateTask(id, taskText);\n    //     setEditingState(false);\n    // };\n\n    // useEffect(() => {\n    //     const input = document.getElementById('text-box');\n    //     if (input) {\n    //         input.focus();\n    //     };\n    // }, [editingState]);\n\n    // useEffect(() => {\n    //     setTaskText(task);\n    // }, [task]);\n\n    return (\n        <div style={toDoStyle.div}>\n            {/* {completed ? <div style={toDoStyle.done} onClick={() => handleUpdateTask(id, false)}></div> : <div style={toDoStyle.notDone} onClick={() => handleUpdateTask(id, true)}></div>}\n            \n            {editingState ? \n            <div style={toDoStyle.task}>\n                <input style={toDoStyle.input} type='text' id='text-box' maxLength='25' value={taskText} onChange={(e) => setTaskText(e.target.value)} /> \n                <button style={toDoStyle.button} onClick={updateTask}>save</button>\n            </div>\n            : <div id='task-text' onClick={() => setEditingState(true)}>{task !== '' ? <p style={toDoStyle.p}>{task}</p> : <p style={{ ...toDoStyle.p, color: 'rgba(219, 210, 195)'}}>add new...</p>}</div>} */}\n        </div>\n    );\n};\n\nexport default ToDo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAAC,IAAA,EAA4C;EAAAC,EAAA;EAAA,IAA3C;IAAEC,EAAE;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAiB,CAAC,GAAAL,IAAA;EACnD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAACQ,IAAI,CAAC;EAE9C,MAAMO,SAAS,GAAG;IACdC,GAAG,EAAE;MACDC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE;IACZ,CAAC;IAEDC,IAAI,EAAE;MACFD,MAAM,EAAE,EAAE;MACVE,KAAK,EAAE,EAAE;MACTC,eAAe,EAAE,0BAA0B;MAC3CC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;IACZ,CAAC;IAEDC,OAAO,EAAE;MACLP,MAAM,EAAE,EAAE;MACVE,KAAK,EAAE,EAAE;MACTE,YAAY,EAAE,EAAE;MAChBI,MAAM,EAAE,oCAAoC;MAC5CH,UAAU,EAAE,EAAE;MACdN,OAAO,EAAE,cAAc;MACvBO,MAAM,EAAE;IACZ,CAAC;IAEDG,CAAC,EAAE;MACCJ,UAAU,EAAE,EAAE;MACdK,SAAS,EAAE,CAAC;MACZC,YAAY,EAAE,oCAAoC;MAClDT,KAAK,EAAE,GAAG;MACVU,QAAQ,EAAE;IACd,CAAC;IAEDtB,IAAI,EAAE;MACFe,UAAU,EAAE,EAAE;MACdQ,YAAY,EAAE;IAClB,CAAC;IAEDC,KAAK,EAAE;MACHN,MAAM,EAAE,MAAM;MACdG,YAAY,EAAE,oCAAoC;MAClDR,eAAe,EAAE,aAAa;MAC9BD,KAAK,EAAE,GAAG;MACVU,QAAQ,EAAE;IACd,CAAC;IAEDG,MAAM,EAAE;MACJP,MAAM,EAAE,MAAM;MACdL,eAAe,EAAE,aAAa;MAC9BS,QAAQ,EAAE,EAAE;MACZN,MAAM,EAAE;IACZ;EACJ,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACIrB,OAAA;IAAK+B,KAAK,EAAEnB,SAAS,CAACC;EAAI;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QASpB;AAEd;AAAChC,EAAA,CAtFQF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAsFZ;AAED,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}