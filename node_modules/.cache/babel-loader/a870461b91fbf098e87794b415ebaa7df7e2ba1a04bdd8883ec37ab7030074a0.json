{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState({});\n  const [allPages, setAllPages] = useState([]);\n  function getAllPages() {\n    pageService.read().then(initialPages => {\n      setAllPages(initialPages);\n    });\n  }\n  ;\n\n  // // function getPage(id) {\n  // //   pageService.one(id)\n  // //     .then(returnedPage => {\n  // //       console.log(returnedPage);\n  // //       setCurrentPage(returnedPage);\n  // //     });\n  // // };\n\n  // function getPage(id) {\n  //   return allPages[id];\n  // };\n\n  // // function changePage(dir) {\n  // //   if (dir === 'back') {\n  // //     getPage(currentPage.id - 1);\n  // //   } else if (dir === 'forward') {\n  // //     getPage(currentPage.id + 1);\n  // //   }\n  // // }\n\n  // // onClick={() => {changePage('forward')}}\n\n  useEffect(() => {\n    getAllPages();\n    const startingPage = allPages.length - 1;\n    setCurrentPage(allPages[startingPage]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Page, {\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage.id > allPages.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentPage.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), currentPage.id < allPages.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"forward\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ixGJ1K5ioZc4Qk9+w1wJ9hbJ61Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","pageService","Page","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","allPages","setAllPages","getAllPages","read","then","initialPages","startingPage","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport pageService from './services/Pages';\nimport Page from './components/Page';\n\n/* crud\npages: (date, todo, events, entry, images)\n - create\n - read\n - update\n - destroy\n\ntodo:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nevents:\n - create\n - read\n - update (whole page updates instead?)\n - destroy\n\nentry: (no create because it will automatically be created upon page creation, no delete because it's required)\n - read\n - update (whole page updates instead?)\n\nimages: (dont need update cause you should delete/create for new image, pages by default have \"\" for all image places)\n - create\n - read\n - destroy\n*/\n\n// new Date ex. Fri Mar 17 2023 16:59:43 GMT-0400 (Eastern Daylight Time)\n// creates as object\n// getDate() => 17\n// getMonth() + 1 because its 0-index => 3\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState({});\n  const [allPages, setAllPages] = useState([]);\n\n  function getAllPages() {\n    pageService.read()\n      .then(initialPages => {\n        setAllPages(initialPages);\n      });\n  };\n\n  // // function getPage(id) {\n  // //   pageService.one(id)\n  // //     .then(returnedPage => {\n  // //       console.log(returnedPage);\n  // //       setCurrentPage(returnedPage);\n  // //     });\n  // // };\n\n  // function getPage(id) {\n  //   return allPages[id];\n  // };\n\n  // // function changePage(dir) {\n  // //   if (dir === 'back') {\n  // //     getPage(currentPage.id - 1);\n  // //   } else if (dir === 'forward') {\n  // //     getPage(currentPage.id + 1);\n  // //   }\n  // // }\n\n  // // onClick={() => {changePage('forward')}}\n\n  useEffect(() => {\n    getAllPages();\n\n    const startingPage = allPages.length - 1;\n    setCurrentPage(allPages[startingPage]);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Page currentPage={currentPage} />\n\n      <div>\n        {currentPage.id > allPages.length ? <p>back</p> : null}\n        <p>{currentPage.id}</p>\n        {currentPage.id < allPages.length ? <p>forward</p> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,SAASW,WAAWA,CAAA,EAAG;IACrBV,WAAW,CAACW,IAAI,EAAE,CACfC,IAAI,CAACC,YAAY,IAAI;MACpBJ,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN;EAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEAf,SAAS,CAAC,MAAM;IACdY,WAAW,EAAE;IAEb,MAAMI,YAAY,GAAGN,QAAQ,CAACO,MAAM,GAAG,CAAC;IACxCR,cAAc,CAACC,QAAQ,CAACM,YAAY,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA,CAACF,IAAI;MAACK,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAElClB,OAAA;MAAAc,QAAA,GACGX,WAAW,CAACgB,EAAE,GAAGd,QAAQ,CAACO,MAAM,gBAAGZ,OAAA;QAAAc,QAAA,EAAG;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,GAAG,IAAI,eACtDlB,OAAA;QAAAc,QAAA,EAAIX,WAAW,CAACgB;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EACtBf,WAAW,CAACgB,EAAE,GAAGd,QAAQ,CAACO,MAAM,gBAAGZ,OAAA;QAAAc,QAAA,EAAG;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,GAAG,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAChB,EAAA,CAnDQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}