{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/Page.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Page(_ref) {\n  _s();\n  let {\n    page,\n    pageService,\n    setCurrentPage\n  } = _ref;\n  const [toDoArr, setToDoArr] = useState({});\n  const [editedPage, setEditedPage] = useState({});\n  useEffect(() => {\n    if (page) {\n      setToDoArr(page.todos);\n    }\n  }, [page]);\n  const pageStyle = {\n    // border: '1px solid black'\n  };\n  const dateBoxStyle = {\n    // color: 'green'\n  };\n  function mapToDos() {\n    var _toDoArr$map;\n    return toDoArr === null || toDoArr === void 0 ? void 0 : (_toDoArr$map = toDoArr.map) === null || _toDoArr$map === void 0 ? void 0 : _toDoArr$map.call(toDoArr, obj => /*#__PURE__*/_jsxDEV(ToDo, {\n      id: obj.id,\n      task: obj.task,\n      completed: obj.completed,\n      updateTask: updateTask\n    }, obj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }, this));\n  }\n  ;\n\n  // const toDos = toDoArr?.map?.(obj => <ToDo key={obj.id} id={obj.id} task={obj.task} completed={obj.completed} updateTask={updateTask} />);\n\n  function updateTask(taskId, k, newState) {\n    const pageCopy = {\n      ...page\n    };\n    if (k === 'task') {} else if (k === 'state') {\n      console.log(pageCopy.todos.find(t => t.id === taskId));\n      const toDoToUpdate = pageCopy.todos.find(t => t.id === taskId);\n      toDoToUpdate.completed = newState;\n      console.log(toDoToUpdate);\n    }\n    ;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: dateBoxStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: page.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: page.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: page.entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), mapToDos()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Page, \"8pGl7oGZMV2+yYSDFPDlrWbGHJg=\");\n_c = Page;\n;\nexport default Page;\n\n/*\n\n    function updateTask(taskId, k, newState) {\n        const pageCopy = { ...page };\n\n\n        const task = page.todos[taskId];\n    \n        if (k === 'task') {\n          const changedTask = { ...task, task: newState };\n        } else if (k === 'state') {\n\n        // const toDosToUpdate = { ...page.todos }\n        // const taskToUpdate = pageCopy.todos[taskId - 1];\n        // const updatedTask = { ...taskToUpdate, completed: att };\n        // pageCopy = pageCopy.todos\n\n        // const taskToUpdate = pageCopy.todos.find(t => t.id === taskId);\n        // taskToUpdate = { taskToUpdate, completed: att };\n        // console.log(taskToUpdate)\n\n        const taskToUpdate = pageCopy.todos[taskId - 1];\n        const updatedTask = { ...taskToUpdate, completed: newState };\n\n        console.log(pageCopy.todos.find(t => t.id ===))\n      };\n    };\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["React","useState","useEffect","ToDo","jsxDEV","_jsxDEV","Page","_ref","_s","page","pageService","setCurrentPage","toDoArr","setToDoArr","editedPage","setEditedPage","todos","pageStyle","dateBoxStyle","mapToDos","_toDoArr$map","map","call","obj","id","task","completed","updateTask","fileName","_jsxFileName","lineNumber","columnNumber","taskId","k","newState","pageCopy","console","log","find","t","toDoToUpdate","style","children","day","month","entry","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/Page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ToDo from \"./ToDo\";\n\nfunction Page({ page, pageService, setCurrentPage }) {\n    const [toDoArr, setToDoArr] = useState({});\n    const [editedPage, setEditedPage] = useState({});\n\n    useEffect(() => {\n        if (page) {\n            setToDoArr(page.todos);\n        }\n    }, [page]);\n\n    const pageStyle = {\n        // border: '1px solid black'\n    }\n    const dateBoxStyle = {\n        // color: 'green'\n    };\n\n    function mapToDos() {\n        return toDoArr?.map?.(obj => <ToDo key={obj.id} id={obj.id} task={obj.task} completed={obj.completed} updateTask={updateTask} />);\n    };\n\n    // const toDos = toDoArr?.map?.(obj => <ToDo key={obj.id} id={obj.id} task={obj.task} completed={obj.completed} updateTask={updateTask} />);\n\n    function updateTask(taskId, k, newState) {\n        const pageCopy = { ...page };\n\n        if (k === 'task') {\n\n        } else if (k === 'state') {\n            console.log(pageCopy.todos.find(t => t.id === taskId));\n            const toDoToUpdate = pageCopy.todos.find(t => t.id === taskId);\n            toDoToUpdate.completed = newState;\n            console.log(toDoToUpdate)\n\n      };\n    };\n\n    return (\n        <div style={pageStyle}>\n            <div style={dateBoxStyle}>\n                <h2>{page.day}</h2>\n                <h2>{page.month}</h2>\n            </div>\n\n            <p>{page.entry}</p>\n\n            {/* {toDos ? toDos : null} */}\n            {mapToDos()}\n            {/* <button onClick={() => console.log(toDos)}>button</button> */}\n        </div>\n    )\n};\n\nexport default Page;\n\n\n/*\n\n    function updateTask(taskId, k, newState) {\n        const pageCopy = { ...page };\n\n\n        const task = page.todos[taskId];\n    \n        if (k === 'task') {\n          const changedTask = { ...task, task: newState };\n        } else if (k === 'state') {\n\n        // const toDosToUpdate = { ...page.todos }\n        // const taskToUpdate = pageCopy.todos[taskId - 1];\n        // const updatedTask = { ...taskToUpdate, completed: att };\n        // pageCopy = pageCopy.todos\n\n        // const taskToUpdate = pageCopy.todos.find(t => t.id === taskId);\n        // taskToUpdate = { taskToUpdate, completed: att };\n        // console.log(taskToUpdate)\n\n        const taskToUpdate = pageCopy.todos[taskId - 1];\n        const updatedTask = { ...taskToUpdate, completed: newState };\n\n        console.log(pageCopy.todos.find(t => t.id ===))\n      };\n    };\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}