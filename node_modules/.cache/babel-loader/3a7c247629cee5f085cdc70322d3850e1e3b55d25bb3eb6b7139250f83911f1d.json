{"ast":null,"code":"var _jsxFileName = \"/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo(_ref) {\n  _s();\n  let {\n    id,\n    task,\n    completed,\n    handleUpdate\n  } = _ref;\n  const [editingState, setEditingState] = useState(false);\n  const [taskText, setTaskText] = useState(task);\n  const toDoStyle = {\n    done: {\n      height: 20,\n      width: 20,\n      backgroundColor: 'rgba(219, 210, 195, 0.8)',\n      borderRadius: 10,\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    notDone: {\n      height: 10,\n      width: 10,\n      borderRadius: 10,\n      border: '5px solid rgba(219, 210, 195, 0.8)',\n      marginLeft: 10,\n      display: 'inline-block',\n      cursor: 'pointer'\n    },\n    p: {\n      display: 'inline-block',\n      marginTop: 0,\n      marginLeft: 10,\n      borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n      width: 250,\n      fontSize: 17\n    }\n  };\n\n  // document.querySelector('#myInput').addEventListener('keypress', function(e) {\n  //     if (e.key === 'Enter') {\n  //         console.log('enter button')\n  //     }\n  // })\n\n  function handleTextChange(e) {\n    setTaskText(e.target.value);\n  }\n  ;\n  const input = document.querySelector('.myInput');\n  input.addEventListener('keyup', _ref2 => {\n    let {\n      key\n    } = _ref2;\n    if (key === 'Enter') {\n      handleUpdate(id, 'task', e.target.value);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.done,\n      onClick: () => handleUpdate(id, 'state', false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: toDoStyle.notDone,\n      onClick: () => handleUpdate(id, 'state', true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 111\n    }, this), editingState ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"myInput\",\n      value: taskText,\n      onChange: e => handleTextChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setEditingState(editingState => !editingState),\n      style: toDoStyle.p,\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 128\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDo, \"EOv4MIT46QDBPYSaSD7+axyA9GU=\");\n_c = ToDo;\n;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDo","_ref","_s","id","task","completed","handleUpdate","editingState","setEditingState","taskText","setTaskText","toDoStyle","done","height","width","backgroundColor","borderRadius","marginLeft","display","cursor","notDone","border","p","marginTop","borderBottom","fontSize","handleTextChange","e","target","value","input","document","querySelector","addEventListener","_ref2","key","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","className","onChange","_c","$RefreshReg$"],"sources":["/Users/smanor/Development/code/personal/mynichi/src/components/ToDo.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction ToDo({ id, task, completed, handleUpdate }) {\n    const [editingState, setEditingState] = useState(false);\n    const [taskText, setTaskText] = useState(task);\n\n    const toDoStyle = {\n        done: {\n            height: 20,\n            width: 20,\n            backgroundColor: 'rgba(219, 210, 195, 0.8)',\n            borderRadius: 10,\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        notDone: {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            border: '5px solid rgba(219, 210, 195, 0.8)',\n            marginLeft: 10,\n            display: 'inline-block',\n            cursor: 'pointer',\n        },\n\n        p: {\n            display: 'inline-block',\n            marginTop: 0,\n            marginLeft: 10,\n            borderBottom: '2px solid rgba(219, 210, 195, 0.8)',\n            width: 250,\n            fontSize: 17,\n        }\n    };\n\n    // document.querySelector('#myInput').addEventListener('keypress', function(e) {\n    //     if (e.key === 'Enter') {\n    //         console.log('enter button')\n    //     }\n    // })\n\n    function handleTextChange(e) {\n        setTaskText(e.target.value);\n    };\n\n    const input = document.querySelector('.myInput');\n    input.addEventListener('keyup', ({key}) => {\n        if (key === 'Enter') {\n            handleUpdate(id, 'task', e.target.value);\n        }\n    });\n\n    return (\n        <div>\n            {completed ? <div style={toDoStyle.done}onClick={() => handleUpdate(id, 'state', false)}></div> : <div style={toDoStyle.notDone} onClick={() => handleUpdate(id, 'state', true)}></div>}\n            {/* <p style={toDoStyle.p}>{task}</p> */}\n            {editingState ? <input type='text' className='myInput' value={taskText} onChange={(e) => handleTextChange(e)} /> : <p onClick={() => setEditingState(editingState => !editingState)} style={toDoStyle.p}>{task}</p>}\n        </div>\n    );\n};\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}